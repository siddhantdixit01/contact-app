{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sid\\\\Desktop\\\\internship assignments\\\\contact-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ContactList from './components/ContactList';\nimport Pagination from './components/Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [contacts, setContacts] = useState([]); // Define 'contacts' as an empty array\n  const contactsPerPage = 10; // Define 'contactsPerPage'\n  const [currentPage, setCurrentPage] = useState(1); // Define 'currentPage' state\n\n  const paginate = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  useEffect(() => {\n    // Fetch contacts data from your backend here and update the 'contacts' state\n    // Example:\n    axios.get('/api/contacts').then(response => {\n      setContacts(response.data);\n    });\n  }, []); // Use an empty dependency array to run this effect once when the component mounts\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ContactList, {\n      contacts: contacts,\n      contactsPerPage: contactsPerPage,\n      currentPage: currentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      contactsPerPage: contactsPerPage,\n      totalContacts: contacts.length,\n      paginate: paginate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xlickWWHmz/NCacovDKOS0VTgxY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","ContactList","Pagination","jsxDEV","_jsxDEV","App","_s","contacts","setContacts","contactsPerPage","currentPage","setCurrentPage","paginate","pageNumber","get","then","response","data","children","fileName","_jsxFileName","lineNumber","columnNumber","totalContacts","length","_c","$RefreshReg$"],"sources":["C:/Users/Sid/Desktop/internship assignments/contact-app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ContactList from './components/ContactList';\nimport Pagination from './components/Pagination';\n\nfunction App() {\n  const [contacts, setContacts] = useState([]); // Define 'contacts' as an empty array\n  const contactsPerPage = 10; // Define 'contactsPerPage'\n  const [currentPage, setCurrentPage] = useState(1); // Define 'currentPage' state\n\n  const paginate = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n\n  useEffect(() => {\n    // Fetch contacts data from your backend here and update the 'contacts' state\n    // Example:\n    axios.get('/api/contacts').then((response) => {\n      setContacts(response.data);\n    });\n  }, []); // Use an empty dependency array to run this effect once when the component mounts\n\n  return (\n    <div>\n      <ContactList\n        contacts={contacts}\n        contactsPerPage={contactsPerPage}\n        currentPage={currentPage}\n      />\n      <Pagination\n        contactsPerPage={contactsPerPage}\n        totalContacts={contacts.length}\n        paginate={paginate}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,UAAU,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAMW,eAAe,GAAG,EAAE,CAAC,CAAC;EAC5B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEnD,MAAMc,QAAQ,GAAIC,UAAU,IAAK;IAC/BF,cAAc,CAACE,UAAU,CAAC;EAC5B,CAAC;EAEDd,SAAS,CAAC,MAAM;IACd;IACA;IACAC,KAAK,CAACc,GAAG,CAAC,eAAe,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;MAC5CR,WAAW,CAACQ,QAAQ,CAACC,IAAI,CAAC;IAC5B,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEb,OAAA;IAAAc,QAAA,gBACEd,OAAA,CAACH,WAAW;MACVM,QAAQ,EAAEA,QAAS;MACnBE,eAAe,EAAEA,eAAgB;MACjCC,WAAW,EAAEA;IAAY;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACFlB,OAAA,CAACF,UAAU;MACTO,eAAe,EAAEA,eAAgB;MACjCc,aAAa,EAAEhB,QAAQ,CAACiB,MAAO;MAC/BZ,QAAQ,EAAEA;IAAS;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAChB,EAAA,CA/BQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAiCZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}