{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sid\\\\Desktop\\\\internship assignments\\\\contact-app\\\\frontend\\\\src\\\\components\\\\ContactList.js\",\n  _s = $RefreshSig$();\n// ContactList.js\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ContactList() {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [contactsPerPage] = useState(10);\n  useEffect(() => {\n    // Fetch contacts from the backend\n    // You can use Axios or another HTTP library here\n    // Update the 'contacts' state with the fetched data\n  }, [currentPage]);\n\n  // Handle contact import here\n\n  // Pagination logic\n  const indexOfLastContact = currentPage * contactsPerPage;\n  const indexOfFirstContact = indexOfLastContact - contactsPerPage;\n  const currentContacts = contacts.slice(indexOfFirstContact, indexOfLastContact);\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleContactImport,\n      children: \"Import Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), currentContacts.map(contact => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", contact.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Phone Number: \", contact.phoneNumber]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", contact.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, contact._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Pagination, {\n      contactsPerPage: contactsPerPage,\n      totalContacts: contacts.length,\n      paginate: paginate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(ContactList, \"LtsO8nneVoSRYZiYJ0obypyslc0=\");\n_c = ContactList;\nexport default ContactList;\nvar _c;\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ContactList","_s","contacts","setContacts","currentPage","setCurrentPage","contactsPerPage","indexOfLastContact","indexOfFirstContact","currentContacts","slice","paginate","pageNumber","children","onClick","handleContactImport","fileName","_jsxFileName","lineNumber","columnNumber","map","contact","name","phoneNumber","email","_id","Pagination","totalContacts","length","_c","$RefreshReg$"],"sources":["C:/Users/Sid/Desktop/internship assignments/contact-app/frontend/src/components/ContactList.js"],"sourcesContent":["// ContactList.js\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction ContactList() {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [contactsPerPage] = useState(10);\r\n\r\n  useEffect(() => {\r\n    // Fetch contacts from the backend\r\n    // You can use Axios or another HTTP library here\r\n    // Update the 'contacts' state with the fetched data\r\n  }, [currentPage]);\r\n\r\n  // Handle contact import here\r\n\r\n  // Pagination logic\r\n  const indexOfLastContact = currentPage * contactsPerPage;\r\n  const indexOfFirstContact = indexOfLastContact - contactsPerPage;\r\n  const currentContacts = contacts.slice(indexOfFirstContact, indexOfLastContact);\r\n\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <div>\r\n      {/* Contact import UI and logic go here */}\r\n      <button onClick={handleContactImport}>Import Contacts</button>\r\n\r\n      {/* Contact listing UI */}\r\n      {currentContacts.map((contact) => (\r\n        <div key={contact._id}>\r\n          <p>Name: {contact.name}</p>\r\n          <p>Phone Number: {contact.phoneNumber}</p>\r\n          <p>Email: {contact.email}</p>\r\n          {/* Add more fields as needed */}\r\n        </div>\r\n      ))}\r\n\r\n      {/* Pagination component */}\r\n      <Pagination\r\n        contactsPerPage={contactsPerPage}\r\n        totalContacts={contacts.length}\r\n        paginate={paginate}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContactList;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACU,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd;IACA;IACA;EAAA,CACD,EAAE,CAACO,WAAW,CAAC,CAAC;;EAEjB;;EAEA;EACA,MAAMG,kBAAkB,GAAGH,WAAW,GAAGE,eAAe;EACxD,MAAME,mBAAmB,GAAGD,kBAAkB,GAAGD,eAAe;EAChE,MAAMG,eAAe,GAAGP,QAAQ,CAACQ,KAAK,CAACF,mBAAmB,EAAED,kBAAkB,CAAC;EAE/E,MAAMI,QAAQ,GAAIC,UAAU,IAAKP,cAAc,CAACO,UAAU,CAAC;EAE3D,oBACEb,OAAA;IAAAc,QAAA,gBAEEd,OAAA;MAAQe,OAAO,EAAEC,mBAAoB;MAAAF,QAAA,EAAC;IAAe;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAG7DV,eAAe,CAACW,GAAG,CAAEC,OAAO,iBAC3BtB,OAAA;MAAAc,QAAA,gBACEd,OAAA;QAAAc,QAAA,GAAG,QAAM,EAACQ,OAAO,CAACC,IAAI;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3BpB,OAAA;QAAAc,QAAA,GAAG,gBAAc,EAACQ,OAAO,CAACE,WAAW;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1CpB,OAAA;QAAAc,QAAA,GAAG,SAAO,EAACQ,OAAO,CAACG,KAAK;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAHrBE,OAAO,CAACI,GAAG;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKhB,CACN,CAAC,eAGFpB,OAAA,CAAC2B,UAAU;MACTpB,eAAe,EAAEA,eAAgB;MACjCqB,aAAa,EAAEzB,QAAQ,CAAC0B,MAAO;MAC/BjB,QAAQ,EAAEA;IAAS;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAClB,EAAA,CA3CQD,WAAW;AAAA6B,EAAA,GAAX7B,WAAW;AA6CpB,eAAeA,WAAW;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}